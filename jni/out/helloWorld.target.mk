# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := helloWorld
DEFS_Default := 

# Flags passed to both C and C++ files.
CFLAGS_Default := -Wall \
	-Wextra \
	-fPIC

# Flags passed to only C (and not C++) files.
CFLAGS_C_Default := 

# Flags passed to only C++ (and not C) files.
CFLAGS_CC_Default := 

INCS_Default := -I$(srcdir)/skia_src/out/Debug/obj.target/core \
	-I$(srcdir)/skia_src/out/Debug/obj.target/config \
	-I$(srcdir)/skia_src/out/Debug/obj.target/images \
	-I$(srcdir)/skia_src/out/Debug/obj.target/ports \
	-I$(srcdir)/skia_src/out/Debug/obj.target/utils

OBJS := $(obj).target/$(TARGET)/src/helloWorld.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Default := 

LIBS := -freetype \
	-lpthread \
	lpng \
	lGL \
	lGLU \
	lcore \
	limages \
	lports \
	lutils

$(builddir)/helloWorld: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/helloWorld: LIBS := $(LIBS)
$(builddir)/helloWorld: TOOLSET := $(TOOLSET)
$(builddir)/helloWorld: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/helloWorld
# Add target alias
.PHONY: helloWorld
helloWorld: $(builddir)/helloWorld

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/helloWorld

